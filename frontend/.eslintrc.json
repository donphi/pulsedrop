{
  // Explicitly set the TypeScript parser
  "parser": "@typescript-eslint/parser",
  "extends": [
    "next/core-web-vitals",
    "eslint:recommended",
    // Add recommended TypeScript rules
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": [
    "tailwindcss",
    // Add the TypeScript plugin
    "@typescript-eslint"
  ],
  "rules": {
    // Keep existing Tailwind rules
    "tailwindcss/no-custom-classname": [
      "error",
      {
        "whitelist": [
          "^bg-(background|card|primary|secondary|accent|neutral|hero-gradient|overlay|primary-muted|primary-muted-opacity)$",
          "^bg-transparent-transparentWhite$",
          "^bg-transparent-transparentBlack$",
          "^bg-transparent-transparentPrimary$",
          "^bg-transparent$",
          "^text-(foreground|cardForeground|mutedText)$",
          "^ring-(primary-muted|white|black/10|blackTransparent|inset|transparentWhite|transparentBlack|transparentPrimary)$",
          "^shadow-(button|card|dialog|primaryTransparent)$",
          "^drop-shadow-primary-pulse$",
          "^rounded(-.*)?$",
          "^border(-.*)?$",
          "^border-(transparentWhite|transparentBlack|transparentPrimary)$",
          "^p-.*$",
          "^m-.*$",
          "^gap-.*$",
          "^flex$",
          "^grid.*$",
          "^inline.*$",
          "^block$",
          "^w-.*$",
          "^h-.*$",
          "^max-w-.*$",
          "^max-h-.*$",
          "^min-w-.*$",
          "^min-h-.*$",
          "^sm:.*$",
          "^md:.*$",
          "^lg:.*$",
          "^xl:.*$",
          "^2xl:.*$",
          "^focus.*$",
          "^hover.*$",
          "^dark.*$",
          "^transition.*$",
          "^ease.*$",
          "^duration.*$",
          "^bg-(success-muted|error-muted)$",
          "^text-(success|error)$",
          "^bg-ecg-(normal|moderate|high|max)$",
          "^drop-shadow-ecg-(normal|moderate|high|max)$",
          "^bg-neutral-muted$",
          "^space-[xy]-[0-9]+$",
          "^h-[0-9]+(\\.[0-9]+)?$",
          "^overflow-hidden$",
          "^ease-.*$"
        ]
      }
    ],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "Literal[value=/\\b(bg|text|border|ring|shadow)-(red|blue|green|yellow|indigo|purple|pink|gray|white|black|stone|zinc|slate|#[a-fA-F0-9]{3,6})\\b/]",
        "message": "Hardcoded Tailwind colors are forbidden. Use semantic class names mapped from globals.css and tailwind.config.js."
      },
      {
        // Exception for ECGDashboard.tsx and DashboardHero.tsx - Safari compatibility requires hardcoded colors
        "selector": "Literal[value=/\\b(bg|text|border|ring|shadow)-(red|blue|green|yellow|indigo|purple|pink|gray|white|black|stone|zinc|slate|#[a-fA-F0-9]{3,6})\\b/]",
        "message": "Hardcoded Tailwind colors are forbidden. Use semantic class names mapped from globals.css and tailwind.config.js.",
        "excludeFiles": ["**/ECGDashboard.tsx", "**/DashboardHero.tsx"]
      }
    ],
    // Disable the no-explicit-any rule completely to allow the use of 'any' type in auth.ts
    "@typescript-eslint/no-explicit-any": "off"
    // The 'plugin:@typescript-eslint/recommended' preset usually handles 'no-unused-vars' correctly for TS/JSX.
    // It typically disables the base 'no-unused-vars' and enables '@typescript-eslint/no-unused-vars'.
    // If the problem persists after this change, we might need explicit configuration here.
  }
}
